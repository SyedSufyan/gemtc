
# generated by stc
# date: 2012/11/30 16:09:50

package require turbine 0.0.6
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
}


proc swift:main {  } {
    turbine::c::log "enter function: main"
    set stack 0
    turbine::allocate u:sleepTime float 0
    # Value __ov___t0-0 with type $string was defined
    # Value __ov_bound-1 with type $int was defined
    # Value __ov___t2-2 with type $string was defined
    # Value __ov_sleepTime-3 with type $float was defined
    # Swift l.13: assigning expression to bound
    set optv:__t0-0 [ turbine::argv_get_impl "bound" ]
    set optv:bound-1 [ turbine::check_str_int ${optv:__t0-0} ]
    # Swift l.14: assigning expression to sleepTime
    set optv:__t2-2 [ turbine::argv_get_impl "sleeptime" ]
    set optv:sleepTime-3 [ turbine::check_str_float ${optv:__t2-2} ]
    turbine::store_float ${u:sleepTime} ${optv:sleepTime-3}
    # Swift l.26 evaluating  expression and throwing away 1 results
    for { set v:i 1 } { ${v:i} <= ${optv:bound-1} } { incr v:i 1 } {
        turbine::allocate t:6 void 0
        turbine::sleep ${stack} [ list ${t:6} ] [ list ${u:sleepTime} ]
    }
}

turbine::defaults
turbine::init $engines $servers
turbine::start swift:main swift:constants
turbine::finalize

