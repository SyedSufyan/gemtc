
# Generated by stc version 0.2.0
# date                    : 2014/01/10 14:25:13
# Turbine version         : 0.3.0
# Input filename          : /home/skrieder/exm/apps/fake-gemtc/test_gemtc.swift
# Output filename         : /home/skrieder/exm/apps/fake-gemtc
# STC home                : /home/skrieder/sfw/stc
# Turbine home            : /home/skrieder/sfw/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.codegen.no-stack          : true
# stc.codegen.no-stack-vars     : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : test_gemtc.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : false
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dead-code-elim        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-dataflow-ops   : true
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : true
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-unroll           : false
# stc.opt.function-inline       : false
# stc.opt.function-inline-threshold: 500
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : 
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : 
# stc.stc_home                  : /home/skrieder/sfw/stc
# stc.turbine.version           : 0.3.0
# stc.turbine_home              : /home/skrieder/sfw/turbine
# stc.version                   : 0.2.0

# Metadata:

package require turbine 0.3.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:i_1
    turbine::allocate_custom c:i_1 integer 1 1 1
    turbine::store_integer ${c:i_1} 1
    global c:i_2
    turbine::allocate_custom c:i_2 integer 1 1 1
    turbine::store_integer ${c:i_2} 2
}

package require gemtc 0.0


proc swift:main {  } {
    turbine::c::log "enter function: main"
    set stack 0
    # Var: int c:i_2 OPT_TEMPORARY
    global c:i_2
    # Var: int c:i_1 OPT_TEMPORARY
    global c:i_1
    # Var: int u:r test_gemtc.swift:main():10:5
    # Var: int u:s test_gemtc.swift:main():11:5
    lassign [ adlb::multicreate [ list integer 1 ] [ list integer 1 ] ] u:r u:s
    turbine::c::log "allocated u:r=<${u:r}> u:s=<${u:s}>"
    # Swift l.10: assigning expression to r
    gemtc::gemtc_sleep [ list ${u:r} ] [ list ${c:i_1} ]
    # Swift l.11: assigning expression to s
    gemtc::gemtc_sleep [ list ${u:s} ] [ list ${c:i_2} ]
    # Swift l.13 evaluating  expression and throwing away 1 results
    # Swift l.14 evaluating  expression and throwing away 1 results
    turbine::rule [ list ${u:r} ] "main-call_foreign-printf ${stack} ${u:r}"
    turbine::rule [ list ${u:s} ] "main-call_foreign-printf-1 ${stack} ${u:s}"
}


proc main-call_foreign-printf { stack u:r } {
    # Var: $int optv:r VALUE_OF [int:r]
    # Var: $void optv:__t2 VALUE_OF [void:__t2]
    set optv:r [ turbine::retrieve_integer ${u:r} CACHED 1 ]
    set optv:__t2 [ turbine::printf_local "The result received to swift for r was: %d\n" ${optv:r} ]
}


proc main-call_foreign-printf-1 { stack u:s } {
    # Var: $int optv:s VALUE_OF [int:s]
    # Var: $void optv:__t4 VALUE_OF [void:__t4]
    set optv:s [ turbine::retrieve_integer ${u:s} CACHED 1 ]
    set optv:__t4 [ turbine::printf_local "The result received to swift for s was: %d\n" ${optv:s} ]
}

turbine::defaults
turbine::init $engines $servers "Swift"
turbine::enable_read_refcount
turbine::xpt_init
turbine::check_constants "WORKER" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::CONTROL_TASK} 1 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
turbine::start swift:main swift:constants
turbine::finalize
turbine::xpt_finalize

