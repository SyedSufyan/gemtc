
# Generated by stc version 0.0.3
# date                    : 2013/01/29 09:50:45
# Turbine version         : 0.0.6
# Input filename          : /home/skrieder/exm/apps/fake-gemtc/test-swift.swift
# Output filename         : /home/skrieder/exm/apps/fake-gemtc/test-swift.tcl
# STC home                : /home/skrieder/sfw/stc
# Turbine home            : /home/skrieder/sfw/turbine
# Compiler settings:
# stc.array-ref-switcheroo      : false
# stc.codegen.no-stack          : true
# stc.codegen.no-stack-vars     : true
# stc.debugging                 : COMMENTS
# stc.exp.refcounting           : false
# stc.ic.output-file            : 
# stc.input_filename            : test-swift.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.opt.branch-predict        : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dead-code-elim        : true
# stc.opt.disable-asserts       : false
# stc.opt.flatten-nested        : true
# stc.opt.forward-dataflow      : true
# stc.opt.function-inline       : false
# stc.opt.function-inline-threshold: 2
# stc.opt.hoist                 : true
# stc.opt.max-iterations        : 10
# stc.opt.pipeline              : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loops          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : test-swift.tcl
# stc.rpath                     : 
# stc.stc_home                  : /home/skrieder/sfw/stc
# stc.turbine.version           : 0.0.6
# stc.turbine_home              : /home/skrieder/sfw/turbine
# stc.version                   : 0.0.3

package require turbine 0.0.6
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
}


proc swift:main {  } {
    turbine::c::log "enter function: main"
    set stack 0
    # Swift l.10: assigning expression to x
    # Swift l.11 evaluating  expression and throwing away 0 results
    turbine::printf_local "The message is: %s" "Hello World!"
}

turbine::defaults
turbine::init $engines $servers
turbine::start swift:main swift:constants
turbine::finalize

