
# Generated by stc version 0.2.0
# date                    : 2014/02/26 14:39:11
# Turbine version         : 0.3.0
# Input filename          : /home/skrieder/gemtc/debunk/saxpy/swift_gpu/test-saxpy-1.swift
# Output filename         : /home/skrieder/gemtc/debunk/saxpy/swift_gpu
# STC home                : /home/skrieder/sfw/stc
# Turbine home            : /home/skrieder/sfw/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.codegen.no-stack          : true
# stc.codegen.no-stack-vars     : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : test-saxpy-1.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : false
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dead-code-elim        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-dataflow-ops   : true
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : true
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-unroll           : false
# stc.opt.function-inline       : false
# stc.opt.function-inline-threshold: 500
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : 
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : 
# stc.stc_home                  : /home/skrieder/sfw/stc
# stc.turbine.version           : 0.3.0
# stc.turbine_home              : /home/skrieder/sfw/turbine
# stc.version                   : 0.2.0

# Metadata:

package require turbine 0.3.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
}

package require saxpy 0.0


proc swift:main {  } {
    turbine::c::log "enter function: main"
    set stack 0
    # Var: $string optv:__t0 VALUE_OF [string:__t0]
    # Var: $int optv:sleepTime VALUE_OF [int:sleepTime]
    # Swift l.9: assigning expression to sleepTime
    set optv:__t0 [ turbine::argv_get_impl "sleepTime" ]
    set optv:sleepTime [ turbine::check_str_int ${optv:__t0} ]
    # Swift l.10: assigning expression to sum
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "-1 main-call_sync-cuda_saxpy_launcher ${stack} ${optv:sleepTime}"
    turbine::reset_priority
}


proc main-call_sync-cuda_saxpy_launcher { stack optv:sleepTime } {
    # Var: $int optv:sum VALUE_OF [int:sum]
    set optv:sum [ cuda_saxpy_launcher ${optv:sleepTime} ]
}


proc f:cuda_saxpy_launcher { stack u:sum u:i1 dr:location } {
    turbine::c::log "enter function: cuda_saxpy_launcher"
    turbine::read_refcount_incr ${u:i1} 1
    turbine::rule [ list ${u:i1} ] "cuda_saxpy_launcher-argwait ${stack} ${u:sum} ${u:i1}" target ${dr:location} type ${::turbine::WORK}
}


proc cuda_saxpy_launcher-argwait { stack u:sum u:i1 } {
    # Var: $int v:i1 VALUE_OF [int:i1]
    # Var: $int v:sum VALUE_OF [int:sum]
    set v:i1 [ turbine::retrieve_integer ${u:i1} CACHED 1 ]
    set v:sum [ cuda_saxpy_launcher ${v:i1} ]
    turbine::store_integer ${u:sum} ${v:sum}
}

turbine::defaults
turbine::init $engines $servers "Swift"
turbine::enable_read_refcount
turbine::xpt_init
turbine::check_constants "WORKER" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::CONTROL_TASK} 1 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
turbine::start swift:main swift:constants
turbine::finalize
turbine::xpt_finalize

