
# Generated by stc version 0.2.0
# date                    : 2014/05/04 20:55:16
# Turbine version         : 0.3.0
# Input filename          : /home/karthik/gemtc/debunk/hist/swift/cpu/test_blob.swift
# Output filename         : /home/karthik/gemtc/debunk/hist/swift/cpu
# STC home                : /home/skrieder/sfw/stc
# Turbine home            : /home/skrieder/sfw/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.codegen.no-stack          : true
# stc.codegen.no-stack-vars     : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : test_blob.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : false
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dead-code-elim        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-dataflow-ops   : true
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : true
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-unroll           : false
# stc.opt.function-inline       : false
# stc.opt.function-inline-threshold: 500
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : 
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : 
# stc.stc_home                  : /home/skrieder/sfw/stc
# stc.turbine.version           : 0.3.0
# stc.turbine_home              : /home/skrieder/sfw/turbine
# stc.version                   : 0.2.0

# Metadata:

package require turbine 0.3.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
}


proc swift:main {  } {
    turbine::c::log "enter function: main"
    set stack 0
    # Var: file u:data test_blob.swift:main():5:2
    # Var: blob u:b test_blob.swift:main():6:2
    # Var: float[int] u:v test_blob.swift:main():7:2
    # Var: float t:6 EXPR_TEMPORARY test_blob.swift:main():9:23
    # Var: *(float) t:7 EXPR_TEMPORARY test_blob.swift:main():9:23
    # Var: $file optv:data VALUE_OF [file:data]
    lassign [ adlb::multicreate [ list blob 1 ] [ list container integer ref 3 1 ] [ list float 1 ] [ list ref 1 ] ] u:b u:v t:6 t:7
    turbine::c::log "allocated u:b=<${u:b}> u:v=<${u:v}> t:6=<${t:6}> t:7=<${t:7}>"
    turbine::allocate_file2 u:data "" 1
    # Swift l.5: assigning expression to data
    set optv:data [ turbine::input_file_local "input.data" ]
    turbine::set_filename_val ${u:data} "input.data"
    turbine::set_file ${u:data} optv:data
    # Swift l.6: assigning expression to b
    turbine::blob_read [ list ${u:b} ] [ list ${u:data} ]
    # Swift l.7: assigning expression to v
    turbine::floats_from_blob [ list ${u:v} ] [ list ${u:b} ]
    # Swift l.8 evaluating  expression and throwing away 1 results
    # Swift l.9 evaluating  expression and throwing away 1 results
    turbine::container_reference ${u:v} 0 ${t:7} ref
    turbine::dereference_float ${t:6} ${t:7}
    # Swift l.10 evaluating  expression and throwing away 1 results
    turbine::rule [ list ${u:v} ] "main-call_foreign-size ${stack} ${u:v}"
    turbine::rule [ list ${t:6} ] "main-call_foreign-printf-1 ${stack} ${t:6}"
    turbine::decr_local_file_refcount optv:data
}


proc main-call_foreign-size { stack u:v } {
    # Var: $int optv:__t3 VALUE_OF [int:__t3]
    # Var: $void optv:__t1 VALUE_OF [void:__t1]
    # Var: $int optv:__t12 VALUE_OF [int:__t12]
    set optv:__t3 [ turbine::container_size_local ${u:v} 1 ]
    set optv:__t1 [ turbine::printf_local "size(v) = %i" ${optv:__t3} ]
    set optv:__t12 [ expr { ${optv:__t3} - 1 } ]
    set dr:__t11 [ turbine::container_lookup_checked ${u:v} ${optv:__t12} ]
    turbine::read_refcount_incr ${dr:__t11} 1
    turbine::rule [ list ${dr:__t11} ] "main-call_foreign-printf ${stack} ${dr:__t11}"
    turbine::read_refcount_decr ${u:v} 1
}


proc main-call_foreign-printf { stack dr:__t11 } {
    # Var: $float optv:__t10 VALUE_OF [float:__t10]
    # Var: $void optv:__t8 VALUE_OF [void:__t8]
    set optv:__t10 [ turbine::retrieve_float ${dr:__t11} CACHED 1 ]
    set optv:__t8 [ turbine::printf_local "v\[last\]=%0.2f" ${optv:__t10} ]
}


proc main-call_foreign-printf-1 { stack t:6 } {
    # Var: $float optv:__t6 VALUE_OF [float:__t6]
    # Var: $void optv:__t4 VALUE_OF [void:__t4]
    set optv:__t6 [ turbine::retrieve_float ${t:6} CACHED 1 ]
    set optv:__t4 [ turbine::printf_local "v\[0\]=%0.2f" ${optv:__t6} ]
}

turbine::defaults
turbine::init $engines $servers "Swift"
turbine::enable_read_refcount
turbine::xpt_init
turbine::check_constants "WORKER" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::CONTROL_TASK} 1 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
turbine::start swift:main swift:constants
turbine::finalize
turbine::xpt_finalize

